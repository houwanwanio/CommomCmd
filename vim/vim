https://harttle.land/2015/11/07/vim-cursor.html
set autoindent
查看文件名. 在正常模式下： :f 或CTRL+G. 
Ctrl-f    即 PageDown 翻页。
Crtl-b    即 PageUp 翻页。
取消上一步操作是 ctrl+r
第一种方式
在normal模式下按下 / 即可进入查找模式，输入要查找的字符串并按下回车。 Vim会跳转到第一个匹配。 按下 n 查找下一个，按下 N 查找上一个。 
:$ 跳转到最后一行
:1 跳转到第一行
第二种方式

shift+g 跳转到最后一行
gg 跳转到第一行


:w 保存文件但不退出vi
:w file 将修改另外保存到file中，不退出vi
:w! 强制保存，不推出vi
:wq 保存文件并退出vi
:wq! 强制保存文件，并退出vi
:q 不保存文件，退出vi
:q! 不保存文件，强制退出vi
:e! 放弃所有修改，从上次保存文件开始再编辑命令历史


/super  或者  ？super，  两者的区别是前者是从上往下搜索，后者是从下往上搜索。

Shift + *  ，即可快速选中该单词，并且可以通过 n  或  N 进行上一个或下一个的匹配


https://harttle.land/2016/08/08/vim-search-in-file.html
https://harttle.land/tags.html#Github
在 Vim 中优雅地查找和替换


1. 选定文本块。使用v进入可视模式，移动光标键选定内容。

2.复制的命令是y，即yank（提起） ，常用的命令如下：
    y      在使用v模式选定了某一块的时候，复制选定块到缓冲区用；
    yy    复制整行（nyy或者yny ，复制n行，n为数字）；
    y^   复制当前到行头的内容；
    y$    复制当前到行尾的内容；
    yw   复制一个word （nyw或者ynw，复制n个word，n为数字）；
    yG    复制至档尾（nyG或者ynG，复制到第n行，例如1yG或者y1G，复制到档尾） 

4. 粘贴的命令式p，即put（放下）
    p      小写p代表贴至游标后（下），因为游标是在具体字符的位置上，所以实际是在该字符的后面
    P      大写P代表贴至游标前（上）
    整行的复制粘贴在游标的上（下）一行，非整行的复制则是粘贴在游标的前（后）
在复制粘贴时，另一组常用的命令是u（撤销操作），U（撤销某一行最近所有修改），Ctrl+R（重做），这些功能主要是vim中的，vi中略有差别



在鸟哥的私房菜中介绍，VIM的滚屏快捷键ctrl+f ctrl+b ctrl+d ctrl+u,生硬的命令真的是很难记忆。怎么办呢？去网上查查资料，看有没有该命令的文档介绍。还真有呢！

向下滚动一屏(ctrl+f)
助记: Forwards。

向下滚动半屏(ctrl+d)
助记: Downwards。

向上滚动一屏(ctrl+b)
* 助记: Backwards。*

向上滚动半屏(ctrl+u)
助记: Upwards。



（一）以下都是对光标位置的操作：

h 向左

j  向下

k 向上

l  向右

0  行首,第一个字符之前(注：这是数字零 )

^ 行首(第一个非空字符处)

$ 行尾

gg 全文第一行第一个字符处

G 最后一行开头第一个字符处

nG  第n行开头第一个字符处

w  后移一个字（单词）

nw  后移n个字（单词）

b    前移一个字（单词）

nb  前移n个字（单词）


https://www.jianshu.com/p/1859ab58e6aa

（一）以下都是对光标位置的操作：

h 向左

j  向下

k 向上

l  向右

0  行首,第一个字符之前(注：这是数字零 )

^ 行首(第一个非空字符处)

$ 行尾

gg 全文第一行第一个字符处

G 最后一行开头第一个字符处

nG  第n行开头第一个字符处

w  后移一个字（单词）

nw  后移n个字（单词）

b    前移一个字（单词）

nb  前移n个字（单词）

（二）以下是有关复制、粘贴命令：

yy 复制当前行

nyy 复制从当前行开始向下n行

yw  复制当前单词

nyw 复制人当前单词开始向后n个单词

p  粘贴

dd  剪切当前行

ndd 剪切从当前行起向下n行

（三）删除

x  册除光标所在的字符

nx 删除从光标所在字符起向后n个字符

X  删除光标前面的字符

nX 删除光标前面n个字符

dw  删除光标所在的字（单词）

ndw 删除从光标所在的字（单词）起向后的n个字（单词）

dd  删除当前行（其实是剪切）

ndd 删除从当前行起向下n行（也是剪切）

（四）光标插入的位置

i    在当前光标所在字符的前面开始插入新字符

I    在行首开始位置插入新字符

a    在当前光标所在字符的后面开始插入新字符

A    在行尾位置开始插入新字符

o    在光标所在的当前行的下面插入一 行并可以开始插入新字符

O    在光标所在的当前行的上面插入一行，并可以开始插入新字符。

(五)其他常用命令：

r    替换光标所在的字符，如当前光标在a字符上，那么在命令式下按rg,那么a就会被换成g.

R    替换光标所到之处的字符，直至按下“Esc“为止。

u    撤销上次操作

U    撤销所有改变

.      重复上一次的命令

ZZ  保存文档后退出

%

(六)

以下与光标无关：

ctrl b 向上翻一页

ctrl f  向下翻一页

ctrl u 向上翻半页

ctrl d 向下翻半页

ctrl y 向上翻一行

ctrl e 向下翻一行

最后来看看底行模式：

保存、退出

q    退出

q!    强制退出

w    保存

w fileName    另存为fileName文件

w！fileName  强制另存为fileName文件

r fileName    在当前光标所在的位置读入另一个文件的内容。

wq    保存并退出

x        保存并退出

x!      强制保存并退出

查找

／    向下查找匹配字符串功能

？    向前查找匹配字符串功能

替换

s/pattern1/pattern2/g    把当前光标所在行的字符串pattern1替换成pattern2

%s/pattern1/pattern2/g    把所有行的字符串pattern1替换成pattern2

num1,num2  s/pattern1/pattern2/g    把第num1行到第num2行的字符串pattern1替换成pattern2

vim寄存器
https://harttle.land/2016/07/25/vim-registers.html



vim视图模式
命令	用途
Esc	退回到普通模式
v	激活面向字符的可视模式
V	激活面向行的可视模式
Ctrl + v	激活面向列块的可视模式
gv	重选上次的高亮选区
o	切换到高亮选区的活动端




     可以使用如下方式来实现快速查找：

1， 最快的方式是让光标停留在想要查找的单词的任意一个字母上面， 然后输入Shift + *  ，即可快速选中该单词，并且可以通过 n  或  N 进行上一个或下一个的匹配。

2， 让光标停留在单词的第一个字母上， 然后输入yw拷贝该单词， 然后输入 / (Ctrl + R) 0 （即 /”0），回车， 就查找到了第一个匹配的单词， 并且可以通过 n  或  N 进行上一个或下一个的匹配。




vim函数之间跳转

此时如果想要回到跳转之前的位置， 只需要通过快捷键“ CTRL + T ”即可。这种方式不局限于同一文件中的跳转，也适合于不同文件之间的跳转，而且按了多少次“ CTRL + ] ”，就可以按多少次“ CTRL + T ”原路返回，非常方便好用！！！


有时，你只是想查看一个文件，而没打算修改它。有一个风险是你想都没想就输入了一个 "w" 命令。要避免这个问题，以只读模式编辑这个文件。 要用只读模式启动 Vim，可以使用这个命令： 
vim -R file

即使这样，你的修改还是会被接纳的。有可能你只是想排列这些文本，以便阅读。 如果你确实要改动这个文件，在 write 命令前面加上 ! 可以强制写入。 如果你的确想禁止文件修改，用这个命令： 
vim -M file


按ggdG清空文档内容
